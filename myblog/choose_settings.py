"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, `
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""
# choose settings between Developement and Deploy

import logging
import os
import platform

from time import strftime

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
LOG_PATH = os.path.join(BASE_DIR, 'logs')

# config log with dictconfig
if not os.path.exists(LOG_PATH):
    os.mkdir(LOG_PATH)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        # todo customize my own filter
        # 'special': {
        #     '()': 'project.logging.SpecialFilter',
        #     'foo': 'bar',
        # },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(LOG_PATH, "info{time_str}.log".format(time_str=strftime('%Y%m%d%H')))
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'myblog.custom': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        }
    }
}

logger = logging.getLogger("myblog.custom")

node = platform.node()
logger.log(level=logging.INFO, msg="{node}".format(node=node))

dev_machines = ('cheng-cx', 'chengcx', 'chengcx.local', 'cheng-cx.local')

if node in dev_machines:
    print('Debug')
    logger.log(level=logging.INFO, msg='Debug')
    # folder BASE_DIR or project myblog dir which is the same as app folder.
    # project dir, contains static and media folder under deploy environment

    DEBUG =  True

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'blogcx',
            'USER': 'root',
            'PASSWORD': 'Nio@1968',
            'host': 'localhost',
            'PORT': '3306',
        }
    }

    ALLOWED_HOSTS = ['*']
else:
    print('prod')
    logger.log(level=logging.INFO, msg='Deploy')
    DEBUG = False
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'blogcx',
            'USER': 'root',
            'PASSWORD': 'Nio@1968',
            'HOST': 'localhost',
            'PORT': '3306',
        }
    }

    ALLOWED_HOSTS = [
        '*',
    ]
