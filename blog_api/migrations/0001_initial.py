# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-03-21 16:17
from __future__ import unicode_literals

import django.db.models.deletion
import taggit.managers
from django.db import migrations, models

import blog_api.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('body', models.TextField(blank=True)),
                ('md_file', models.FileField(blank=True, upload_to=blog_api.models.BlogPost.get_upload_md_name)),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('last_edit_date', models.DateTimeField(auto_now=True, verbose_name='last edited')),
                ('slug', models.SlugField(blank=True, max_length=200)),
                ('html_file', models.FileField(blank=True, upload_to=blog_api.models.BlogPost.get_html_name)),
                ('category', models.CharField(
                    choices=[('ml', 'Machine Learning'), ('ani', 'Animation'), ('su', 'Summary'),
                             ('programming', 'Programming'), ('acg', 'animation & summary & machine learning'),
                             ('nc', 'No Category'), ('oth', 'Others')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.',
                                                         through='taggit.TaggedItem', to='taggit.Tag',
                                                         verbose_name='Tags')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='BlogPostImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=blog_api.models.BlogPostImage.get_upload_img_name)),
                ('blogpost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images',
                                               to='blog_api.BlogPost')),
            ],
        ),
        migrations.CreateModel(
            name='PoomsaeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.CharField(max_length=150)),
                ('actionsum', models.IntegerField()),
                ('leg', models.CharField(max_length=150)),
                ('foot', models.CharField(max_length=150)),
                ('defence', models.CharField(max_length=150)),
                ('attack', models.CharField(max_length=150)),
                ('meaning', models.CharField(blank=True, max_length=750)),
            ],
        ),
        migrations.CreateModel(
            name='TaekwondoPoomsae',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.CharField(max_length=150)),
                ('action', models.CharField(max_length=150)),
                ('sequence', models.IntegerField()),
                ('actionsum', models.IntegerField()),
                ('remark', models.CharField(blank=True, max_length=750)),
            ],
        ),
    ]
